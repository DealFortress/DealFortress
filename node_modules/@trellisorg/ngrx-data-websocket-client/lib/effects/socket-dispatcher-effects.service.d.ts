import { Actions } from '@ngrx/effects';
import { SocketActionFactory } from '../actions/socket-action-factory';
import { SocketEventListenerCollectionService } from '../listeners/socket-event-listener-collection.service';
import * as i0 from "@angular/core";
export declare class SocketDispatcherEffects {
    private _actions$;
    private socketEventListenerCollectionService;
    private socketActionFactory;
    socketEventWithoutCrid$: import("rxjs").Observable<import("@ngrx/data").EntityAction<any>> & import("@ngrx/effects").CreateEffectMetadata;
    dispatchSocketEvent$: import("rxjs").Observable<void> & import("@ngrx/effects").CreateEffectMetadata;
    constructor(_actions$: Actions, socketEventListenerCollectionService: SocketEventListenerCollectionService, socketActionFactory: SocketActionFactory);
    static ɵfac: i0.ɵɵFactoryDeclaration<SocketDispatcherEffects, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<SocketDispatcherEffects>;
}
