import { EntityCollectionServiceBase, EntityCollectionServiceElementsFactory } from '@ngrx/data';
import type { EntitySelectors$ } from '@ngrx/data/src/selectors/entity-selectors$';
import type { Observable } from 'rxjs';
import type { SocketServiceElementsFactory } from './socket-service-elements.factory';
export declare class SocketCollectionServiceBase<T, S$ extends EntitySelectors$<T> = EntitySelectors$<T>> extends EntityCollectionServiceBase<T, S$> {
    protected socketServiceElementsFactory: SocketServiceElementsFactory<T>;
    private readonly listener;
    readonly connected$: Observable<boolean>;
    readonly connecting$: Observable<boolean>;
    constructor(entityName: string, serviceElementsFactory: EntityCollectionServiceElementsFactory, socketServiceElementsFactory: SocketServiceElementsFactory<T>);
    connect(params: any): Observable<boolean>;
    disconnect(): void;
}
