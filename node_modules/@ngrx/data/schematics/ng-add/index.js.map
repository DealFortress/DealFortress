{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../modules/data/schematics/ng-add/index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as ts from 'typescript';\nimport { Path } from '@angular-devkit/core';\nimport {\n  apply,\n  applyTemplates,\n  branchAndMerge,\n  chain,\n  mergeWith,\n  move,\n  Rule,\n  SchematicContext,\n  SchematicsException,\n  noop,\n  Tree,\n  url,\n} from '@angular-devkit/schematics';\nimport { NodePackageInstallTask } from '@angular-devkit/schematics/tasks';\nimport {\n  addImportToModule,\n  addPackageToPackageJson,\n  commitChanges,\n  createReplaceChange,\n  findModuleFromOptions,\n  getProjectPath,\n  insertImport,\n  parseName,\n  platformVersion,\n  ReplaceChange,\n  stringUtils,\n  visitTSSourceFiles,\n} from '../../schematics-core';\nimport { Schema as EntityDataOptions } from './schema';\nimport { getProjectMainFile } from '../../schematics-core/utility/project';\nimport { isStandaloneApp } from '../../schematics-core/utility/standalone';\nimport {\n  addFunctionalProvidersToStandaloneBootstrap,\n  callsProvidersFunction,\n} from '@schematics/angular/private/standalone';\n\nfunction addNgRxDataToPackageJson() {\n  return (host: Tree, context: SchematicContext) => {\n    addPackageToPackageJson(\n      host,\n      'dependencies',\n      '@ngrx/data',\n      platformVersion\n    );\n    context.addTask(new NodePackageInstallTask());\n    return host;\n  };\n}\n\nfunction addEntityDataToNgModule(options: EntityDataOptions): Rule {\n  return (host: Tree) => {\n    throwIfModuleNotSpecified(host, options.module);\n\n    const modulePath = options.module!;\n    const text = host.read(modulePath)!.toString();\n\n    const source = ts.createSourceFile(\n      modulePath,\n      text,\n      ts.ScriptTarget.Latest,\n      true\n    );\n\n    const moduleToImport = options.effects\n      ? 'EntityDataModule'\n      : 'EntityDataModuleWithoutEffects';\n\n    const effectsModuleImport = insertImport(\n      source,\n      modulePath,\n      moduleToImport,\n      '@ngrx/data'\n    );\n\n    const [dateEntityNgModuleImport] = addImportToModule(\n      source,\n      modulePath,\n      options.entityConfig\n        ? [moduleToImport, 'forRoot(entityConfig)'].join('.')\n        : moduleToImport,\n      ''\n    );\n\n    const changes = [effectsModuleImport, dateEntityNgModuleImport];\n\n    if (options.entityConfig) {\n      const entityConfigImport = insertImport(\n        source,\n        modulePath,\n        'entityConfig',\n        './entity-metadata'\n      );\n      changes.push(entityConfigImport);\n    }\n\n    commitChanges(host, source.fileName, changes);\n\n    return host;\n  };\n}\n\nfunction addStandaloneConfig(options: EntityDataOptions): Rule {\n  return (host: Tree) => {\n    const mainFile = getProjectMainFile(host, options);\n    if (host.exists(mainFile)) {\n      const providerFn = 'provideEntityData';\n\n      if (callsProvidersFunction(host, mainFile, providerFn)) {\n        // exit because the store config is already provided\n        return host;\n      }\n\n      const providerOptions = [\n        ...(options.entityConfig\n          ? [ts.factory.createIdentifier(`entityConfig`)]\n          : [ts.factory.createIdentifier(`{}`)]),\n        ...(options.effects\n          ? [ts.factory.createIdentifier(`withEffects()`)]\n          : []),\n      ];\n\n      const patchedConfigFile = addFunctionalProvidersToStandaloneBootstrap(\n        host,\n        mainFile,\n        providerFn,\n        '@ngrx/data',\n        providerOptions\n      );\n\n      const configFileContent = host.read(patchedConfigFile);\n      const source = ts.createSourceFile(\n        patchedConfigFile,\n        configFileContent?.toString('utf-8') || '',\n        ts.ScriptTarget.Latest,\n        true\n      );\n\n      const recorder = host.beginUpdate(patchedConfigFile);\n\n      const changes = [];\n\n      if (options.effects) {\n        const withEffectsImport = insertImport(\n          source,\n          patchedConfigFile,\n          'withEffects',\n          '@ngrx/data'\n        );\n\n        changes.push(withEffectsImport);\n      }\n\n      if (options.entityConfig) {\n        const entityConfigImport = insertImport(\n          source,\n          patchedConfigFile,\n          'entityConfig',\n          './entity-metadata'\n        );\n\n        changes.push(entityConfigImport);\n      }\n\n      changes.forEach((change: any) => {\n        recorder.insertLeft(change.pos, change.toAdd);\n      });\n\n      host.commitUpdate(recorder);\n\n      return host;\n    }\n\n    throw new SchematicsException(\n      `Main file not found for a project ${options.project}`\n    );\n  };\n}\n\nconst renames = {\n  NgrxDataModule: 'EntityDataModule',\n  NgrxDataModuleWithoutEffects: 'EntityDataModuleWithoutEffects',\n  NgrxDataModuleConfig: 'EntityDataModuleConfig',\n};\n\nfunction removeAngularNgRxDataFromPackageJson() {\n  return (host: Tree) => {\n    if (host.exists('package.json')) {\n      const sourceText = host.read('package.json')!.toString('utf-8');\n      const json = JSON.parse(sourceText);\n\n      if (json['dependencies'] && json['dependencies']['ngrx-data']) {\n        delete json['dependencies']['ngrx-data'];\n      }\n\n      host.overwrite('package.json', JSON.stringify(json, null, 2));\n    }\n\n    return host;\n  };\n}\n\nfunction renameNgrxDataModule() {\n  return (host: Tree) => {\n    visitTSSourceFiles(host, (sourceFile) => {\n      const ngrxDataImports = sourceFile.statements\n        .filter(ts.isImportDeclaration)\n        .filter(\n          ({ moduleSpecifier }) =>\n            moduleSpecifier.getText(sourceFile) === \"'ngrx-data'\"\n        );\n\n      if (ngrxDataImports.length === 0) {\n        return;\n      }\n\n      const changes = [\n        ...findNgrxDataImports(sourceFile, ngrxDataImports),\n        ...findNgrxDataImportDeclarations(sourceFile, ngrxDataImports),\n        ...findNgrxDataReplacements(sourceFile),\n      ];\n\n      commitChanges(host, sourceFile.fileName, changes);\n    });\n  };\n}\n\nfunction findNgrxDataImports(\n  sourceFile: ts.SourceFile,\n  imports: ts.ImportDeclaration[]\n) {\n  const changes = imports.map((specifier) =>\n    createReplaceChange(\n      sourceFile,\n      specifier.moduleSpecifier,\n      \"'ngrx-data'\",\n      \"'@ngrx/data'\"\n    )\n  );\n\n  return changes;\n}\n\nfunction findNgrxDataImportDeclarations(\n  sourceFile: ts.SourceFile,\n  imports: ts.ImportDeclaration[]\n) {\n  const changes = imports\n    .map((p) => (p.importClause!.namedBindings! as ts.NamedImports).elements)\n    .reduce((imports, curr) => imports.concat(curr), [] as ts.ImportSpecifier[])\n    .map((specifier) => {\n      if (!ts.isImportSpecifier(specifier)) {\n        return { hit: false };\n      }\n\n      const ngrxDataImports = Object.keys(renames);\n      if (ngrxDataImports.includes(specifier.name.text)) {\n        return { hit: true, specifier, text: specifier.name.text };\n      }\n\n      // if import is renamed\n      if (\n        specifier.propertyName &&\n        ngrxDataImports.includes(specifier.propertyName.text)\n      ) {\n        return { hit: true, specifier, text: specifier.propertyName.text };\n      }\n\n      return { hit: false };\n    })\n    .filter(({ hit }) => hit)\n    .map(({ specifier, text }) =>\n      createReplaceChange(\n        sourceFile,\n        specifier!,\n        text!,\n        (renames as any)[text!]\n      )\n    );\n\n  return changes;\n}\n\nfunction findNgrxDataReplacements(sourceFile: ts.SourceFile) {\n  const renameKeys = Object.keys(renames);\n  const changes: ReplaceChange[] = [];\n  ts.forEachChild(sourceFile, (node) => find(node, changes));\n  return changes;\n\n  function find(node: ts.Node, changes: ReplaceChange[]) {\n    let change = undefined;\n\n    if (\n      ts.isPropertyAssignment(node) &&\n      renameKeys.includes(node.initializer.getText(sourceFile))\n    ) {\n      change = {\n        node: node.initializer,\n        text: node.initializer.getText(sourceFile),\n      };\n    }\n\n    if (\n      ts.isPropertyAccessExpression(node) &&\n      renameKeys.includes(node.expression.getText(sourceFile))\n    ) {\n      change = {\n        node: node.expression,\n        text: node.expression.getText(sourceFile),\n      };\n    }\n\n    if (\n      ts.isVariableDeclaration(node) &&\n      node.type &&\n      renameKeys.includes(node.type.getText(sourceFile))\n    ) {\n      change = {\n        node: node.type,\n        text: node.type.getText(sourceFile),\n      };\n    }\n\n    if (change) {\n      changes.push(\n        createReplaceChange(\n          sourceFile,\n          change.node,\n          change.text,\n          (renames as any)[change.text]\n        )\n      );\n    }\n\n    ts.forEachChild(node, (childNode) => find(childNode, changes));\n  }\n}\n\nfunction throwIfModuleNotSpecified(host: Tree, module?: string) {\n  if (!module) {\n    throw new Error('Module not specified');\n  }\n\n  if (!host.exists(module)) {\n    throw new Error('Specified module does not exist');\n  }\n\n  const text = host.read(module);\n  if (text === null) {\n    throw new SchematicsException(`File ${module} does not exist.`);\n  }\n}\n\nfunction createEntityConfigFile(options: EntityDataOptions, path: Path) {\n  return mergeWith(\n    apply(url('./files'), [\n      applyTemplates({\n        ...stringUtils,\n        ...options,\n      }),\n      move(path),\n    ])\n  );\n}\n\nexport default function (options: EntityDataOptions): Rule {\n  return (host: Tree, context: SchematicContext) => {\n    (options as any).name = '';\n    options.path = getProjectPath(host, options);\n    const mainFile = getProjectMainFile(host, options);\n    const isStandalone = isStandaloneApp(host, mainFile);\n    options.effects = options.effects === undefined ? true : options.effects;\n    options.module =\n      options.module && !isStandalone\n        ? findModuleFromOptions(host, options as any)\n        : options.module;\n\n    const parsedPath = parseName(options.path, '');\n    options.path = parsedPath.path;\n\n    const configOrModuleUpdate = isStandalone\n      ? addStandaloneConfig(options)\n      : addEntityDataToNgModule(options);\n\n    return chain([\n      options && options.skipPackageJson ? noop() : addNgRxDataToPackageJson(),\n      options.migrateNgrxData\n        ? chain([\n            removeAngularNgRxDataFromPackageJson(),\n            renameNgrxDataModule(),\n          ])\n        : branchAndMerge(chain([configOrModuleUpdate])),\n      options.entityConfig\n        ? createEntityConfigFile(options, parsedPath.path)\n        : noop(),\n    ])(host, context);\n  };\n}\n"]}